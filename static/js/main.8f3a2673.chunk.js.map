{"version":3,"sources":["utils.js","actions.js","reducers/pockets.js","reducers/display.js","reducers/rates.js","components/AmountInput.js","components/SwapCurrencies.js","components/ExchangeButton.js","components/Modal.js","components/CurrencySelect.js","components/ExchangeScreen.js","components/Container.js","config.js","App.js","theme.js","serviceWorker.js","index.js","store.js"],"names":["SYMBOLS","EUR","USD","GBP","formatAmount","num","maxFractionDigits","parseFloat","toFixed","convert","fromAmount","fromCurrency","toCurrency","rates","fromRate","toRate","toAmount","getSymbol","currency","actionTypes","updateAmount","dispatch","getState","display","currencyFrom","currencyTo","amountFrom","amountTo","reverse","amount","type","setAmount","updatePocket","toggleReverse","initialState","state","action","useStyles","makeStyles","theme","amountInput","textAlign","fontSize","spacing","label","helperText","startAdornment","error","currentValue","autoFocus","toggleFocus","onChangeAmount","useState","String","value","setValue","useEffect","classes","attributes","onChange","target","newVal","validity","valid","onFocus","TextField","className","textField","fullWidth","margin","autoCapitalize","autoComplete","autoCorrect","spellCheck","variant","inputProps","pattern","InputProps","SwapCurrencies","props","swapCurrencies","IconButton","color","onClick","Icon","grid","marginTop","fab","paddingLeft","paddingRight","ExchangeButton","disabled","Grid","container","justify","Fab","aria-label","Modal","start","onConfirm","text","title","button","open","setOpen","handler","flag","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","menu","width","availableCurrencies","onCurrencyChange","menuItems","map","option","MenuItem","key","select","e","SelectProps","disableUnderline","MenuProps","padding","swap","fetchLatestRates","onExchange","pockets","Object","keys","createLabel","createHelperText","getAdornment","second","InputAdornment","position","CurrencySelect","modal","setModal","isNotEnough","item","AmountInput","Container","tick","ExchangeScreen","this","timer","setInterval","clearInterval","Component","connect","setCurrency","val","fromPocket","toPocket","newToPocket","fetch","then","res","json","data","catch","console","warn","Copyright","Typography","align","Link","href","Date","getFullYear","createMuiTheme","palette","main","red","A400","background","default","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","combineReducers","applyMiddleware","thunk","ThemeProvider","CssBaseline","maxWidth","Box","my","component","gutterBottom","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f3a2673.chunk.js","sourcesContent":["const SYMBOLS = {\n  EUR: '€',\n  USD: '$',\n  GBP: '£'\n};\n\nexport const formatAmount = (num, maxFractionDigits = 4) => {\n  return parseFloat(num.toFixed(maxFractionDigits));\n};\n\nexport const convert = (fromAmount, fromCurrency, toCurrency, rates, maxFractionDigits=2) => {\n  const fromRate = rates[fromCurrency];\n  const toRate = rates[toCurrency];\n  const toAmount = fromAmount / fromRate * toRate;\n  return formatAmount(toAmount, maxFractionDigits);\n};\n\nexport const getSymbol = currency => {\n  return SYMBOLS[currency];\n};","import { API } from './config';\nimport { convert } from './utils';\n\nexport const actionTypes = {\n    FETCH_RATES_START: 'FETCH_RATES_START',\n    FETCH_RATES_SUCCESS: 'FETCH_RATES_SUCCESS',\n    FETCH_RATES_FAIL: 'FETCH_RATES_FAIL',\n    SET_CURRENCY_FROM: 'SET_CURRENCY_FROM',\n    SET_CURRENCY_TO: 'SET_CURRENCY_TO',\n    SET_AMOUNT_FROM: 'SET_AMOUNT_FROM',\n    SET_AMOUNT_TO: 'SET_AMOUNT_TO',\n    TOGGLE_REVERSE: 'TOGGLE_REVERSE',\n    UPDATE_POCKET: 'UPDATE_POCKET'\n};\n\nexport const getLatestRates = () => dispatch => {\n    dispatch({\n        type: actionTypes.FETCH_RATES_START\n    });\n    return fetch(API).then(res => res.json()).then(data => {\n        dispatch({\n            type: actionTypes.FETCH_RATES_SUCCESS,\n            rates: data.rates\n        });\n        dispatch(updateAmount());\n    }).catch(error => {\n         dispatch({\n             type: actionTypes.FETCH_RATES_FAIL\n         });\n         console.warn(error);\n    })\n};\n\nexport const updateAmount = () => (dispatch, getState) => {\n    const {display, rates} = getState();\n    const {currencyFrom, currencyTo, amountFrom, amountTo, reverse} = display;\n\n    if (reverse) {\n        const amount = convert(amountTo, currencyTo, currencyFrom, rates);\n        dispatch({\n            type: actionTypes.SET_AMOUNT_FROM,\n            amount,\n        });\n    } else {\n        const amount = convert(amountFrom, currencyFrom, currencyTo, rates);\n        dispatch({\n            type: actionTypes.SET_AMOUNT_TO,\n            amount,\n        });\n    }\n};\n\nexport const setAmount = amount => (dispatch, getState) => {\n    const {display} = getState();\n    const {reverse} = display;\n    if (amount === '' || amount === 0) { //reset dest amount\n        dispatch({\n            type: reverse ? actionTypes.SET_AMOUNT_FROM : actionTypes.SET_AMOUNT_TO,\n            amount,\n        });\n    }\n    dispatch({\n        type: reverse ? actionTypes.SET_AMOUNT_TO : actionTypes.SET_AMOUNT_FROM,\n        amount\n    });\n\n    dispatch(updateAmount())\n};\n\nexport const setCurrency = (currency, second) => (dispatch, getState) => {\n    const { display } = getState();\n    const { currencyFrom, currencyTo } = display;\n    if (!second && currency === currencyTo) { // auto change dest currency\n      dispatch({\n        type: actionTypes.SET_CURRENCY_TO,\n        currency: currencyFrom,\n      });\n    }\n    if (second && currency === currencyFrom) { // auto change src currency\n      dispatch({\n        type: actionTypes.SET_CURRENCY_FROM,\n        currency: currencyTo,\n      });\n    }\n    dispatch({\n      type: second ? actionTypes.SET_CURRENCY_TO : actionTypes.SET_CURRENCY_FROM,\n      currency\n    });\n\n    dispatch(updateAmount())\n  };\n\nexport const swapCurrencies = () => (dispatch, getState) => {\n    const { display } = getState();\n    const { currencyFrom, currencyTo, amountFrom, amountTo, reverse } = display;\n    dispatch({\n        type: actionTypes.SET_CURRENCY_TO,\n        currency: currencyFrom,\n    });\n    dispatch({\n        type: actionTypes.SET_CURRENCY_FROM,\n        currency: currencyTo,\n    });\n    dispatch({\n        type: actionTypes.SET_AMOUNT_TO,\n        amount: amountFrom,\n    });\n    dispatch({\n        type: actionTypes.SET_AMOUNT_FROM,\n        amount: amountTo,\n    });\n    dispatch(toggleReverse(!reverse));\n};\n\nexport const updatePocket = (currency, amount) => dispatch => {\n    dispatch({\n        type: actionTypes.UPDATE_POCKET,\n        currency,\n        amount\n    });\n};\n\nexport const toggleReverse = (reverse) => dispatch => {\n    dispatch({\n        type: actionTypes.TOGGLE_REVERSE,\n        reverse\n    });\n};\n\nexport const exchange = () => (dispatch, getState) => {\n    const {pockets, display} = getState();\n    const {currencyFrom, currencyTo, amountFrom, amountTo} = display;\n\n    const fromPocket = pockets[currencyFrom];\n    const toPocket = pockets[currencyTo];\n\n    if (amountFrom && fromPocket >= amountFrom) {\n        const newFromPocket = fromPocket - amountFrom;\n        const newToPocket = toPocket + amountTo;\n\n        dispatch(updatePocket(currencyFrom, newFromPocket));\n        dispatch(updatePocket(currencyTo, newToPocket));\n        dispatch(setAmount(0));\n    }\n};","import { actionTypes } from '../actions';\n\nconst initialState = {\n  EUR: 1000,\n  USD: 1000,\n  GBP: 1000\n};\n\nexport default (state = { ...initialState }, action) => {\n  switch (action.type) {\n    case actionTypes.UPDATE_POCKET: {\n      const { currency, amount } = action;\n      return {\n        ...state,\n        [currency]: amount\n      }\n    }\n    default:\n      return state;\n  }\n};","import { actionTypes } from '../actions';\n\nconst initialState = {\n  currencyFrom: 'EUR',\n  currencyTo: 'GBP',\n  amountFrom: 0,\n  amountTo: 0,\n  reverse: false\n};\n\nexport default (state = { ...initialState }, action) => {\n  switch (action.type) {\n\n    case actionTypes.SET_CURRENCY_FROM:\n      return { ...state, currencyFrom: action.currency };   \n    \n    case actionTypes.SET_CURRENCY_TO:\n      return { ...state, currencyTo: action.currency };  \n      \n    case actionTypes.SET_AMOUNT_FROM:\n      return { ...state, amountFrom: action.amount };   \n    \n    case actionTypes.SET_AMOUNT_TO:\n      return { ...state, amountTo: action.amount };\n\n    case actionTypes.TOGGLE_REVERSE:\n      return { ...state, reverse: action.reverse };\n    default:\n      return state;\n  }\n};","import { actionTypes } from '../actions';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    \n    case actionTypes.FETCH_RATES_SUCCESS:\n      const { rates } = action;\n      return {\n        ...state,\n        ...rates\n      };\n      \n    default:\n      return state;\n  }\n};","import React, { useEffect, useState  } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  amountInput: {\n    '& .MuiInputBase-input': {\n      textAlign: 'right',\n      fontSize: theme.spacing(4),\n    }\n  }\n}));\n\nexport default ({\n    label, helperText, startAdornment, error,\n    currentValue, autoFocus, toggleFocus, onChangeAmount }) => {\n\n  const [value, setValue] = useState(String(currentValue));\n\n  useEffect(() => {\n    setValue(String(currentValue))\n  }, [currentValue]);\n\n  const onChange = ({target}) => {\n    const newVal = target.value;\n    if (target.validity.valid) {\n      setValue(newVal);\n      onChangeAmount(parseFloat(newVal || 0));\n    }\n  };\n\n  const classes = useStyles();\n  const attributes = {\n    autoFocus,\n    value,\n    label,\n    onChange,\n    onFocus: () => toggleFocus(!autoFocus),\n    helperText,\n    error\n  };\n  \n  return (\n    <TextField\n        {...attributes}\n        className={`${classes.textField} ${classes.amountInput}`}\n        fullWidth\n        margin=\"normal\"\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        variant=\"outlined\"\n        type=\"text\"\n        inputProps={{pattern: '[0-9]+\\\\.?([0-9]{1,2})?'}}\n        InputProps={{\n          startAdornment\n        }}\n    />\n  );\n};","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\n\nconst SwapCurrencies = props => {\n  const { swapCurrencies } = props;\n  return (\n    <IconButton color=\"secondary\"\n      onClick={swapCurrencies}\n    >\n      <Icon>\n        unfold_more\n      </Icon>\n    </IconButton>\n  )\n}\n\nexport default SwapCurrencies;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    marginTop: theme.spacing(2.5),\n  },\n  fab: {\n    margin: theme.spacing(1),\n    paddingLeft: '15%',\n    paddingRight: '15%',\n  },\n}));\n\nconst ExchangeButton = (props) => {\n  const { onClick, disabled } = props;\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      className={classes.grid}\n    >\n      <Fab \n        variant=\"extended\"\n        color=\"secondary\"\n        aria-label=\"exchange\"\n        className={classes.fab}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        Exchange\n      </Fab >\n    </Grid>\n  )\n}\n\nexport default ExchangeButton;","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst Modal = (props) => {\n  const { start, onConfirm, text, title, button} = props;\n  const [open, setOpen] = useState(start);\n\n  useEffect(() => {\n    setOpen(start)\n  }, [start]);\n\n  const handler = flag => {\n    setOpen(false);\n    onConfirm(flag);\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handler(false)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle color=\"primary\" id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {text}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handler(true)} color=\"primary\">\n          {button}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default Modal;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  menu: {\n      width: 100,\n      '& .MuiInput-formControl': {\n          fontSize: theme.spacing(4),\n      }\n  }\n}));\n\nexport default ({ availableCurrencies, onCurrencyChange, currency }) => {\n  const classes = useStyles();\n  const menuItems = availableCurrencies.map(option => (\n      <MenuItem key={option} value={option}>\n        {option}\n      </MenuItem>\n    ));\n  return (\n    <TextField\n      select\n      className={classes.menu}\n      value={currency}\n      onChange={(e) => onCurrencyChange(e)}\n      SelectProps={{\n        disableUnderline: true,\n        MenuProps: {\n          className: classes.menu,\n        },\n      }}\n      margin=\"normal\"\n    >\n      {menuItems}\n    </TextField>\n  )\n};","import React, {Fragment, useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport {convert, getSymbol, formatAmount} from '../utils';\nimport AmountInput from './AmountInput';\nimport SwapCurrencies from './SwapCurrencies';\nimport ExchangeButton from './ExchangeButton';\nimport Modal from './Modal';\nimport CurrencySelect from \"./CurrencySelect\";\n\nconst useStyles = makeStyles(theme => ({\n  padding: {\n    padding: theme.spacing(1.5)\n  },\n  swap: {\n    width: 48,\n    margin: 'auto'\n  }\n}));\n\nexport default ({ onChangeAmount, onCurrencyChange, fetchLatestRates, swapCurrencies, toggleFocus,\n    onExchange, pockets, display, rates, error }) => {\n\n  const classes = useStyles();\n  const {amountFrom, amountTo, currencyFrom, currencyTo} = display;\n  const availableCurrencies = Object.keys(pockets);\n\n  const createLabel = currency => `You have ${getSymbol(currency)}${formatAmount(pockets[currency])}`;\n  const createHelperText = (currencyFrom, currencyTo) =>\n      `1${getSymbol(currencyFrom)} = ${getSymbol(currencyTo)}${convert(\n          1, currencyFrom, currencyTo, rates, 4\n      )}`;\n\n  const getAdornment = (currency, second) => (\n      <InputAdornment position=\"start\">\n        <CurrencySelect\n            availableCurrencies={availableCurrencies}\n            onCurrencyChange={e => onCurrencyChange(e, second)}\n            currency={currency}\n        />\n      </InputAdornment>\n  );\n  const [modal, setModal] = useState(false);\n  const isNotEnough = () => amountFrom > pockets[currencyFrom];\n  const onConfirm = flag => {\n      setModal(false);\n      flag && onExchange();\n  };\n\n  return (\n    <Fragment>\n      <Grid className={classes.padding} item>\n        <AmountInput\n          startAdornment={getAdornment(currencyFrom)}\n          onChangeAmount={onChangeAmount}\n          label={createLabel(currencyFrom)}\n          helperText={createHelperText(currencyFrom, currencyTo)}\n          currentValue={amountFrom}\n          error={isNotEnough()}\n          toggleFocus={toggleFocus}\n          autoFocus\n        />\n      </Grid>\n      <Grid className={classes.swap} item>\n        <SwapCurrencies swapCurrencies={swapCurrencies} />\n      </Grid>\n      <Grid className={classes.padding} item>\n        <AmountInput\n          label={createLabel(currencyTo)}\n          helperText={createHelperText(currencyTo, currencyFrom)}\n          onChangeAmount={e => onChangeAmount(e, true)}\n          startAdornment={getAdornment(currencyTo, true)}\n          currentValue={amountTo}\n          toggleFocus={toggleFocus}\n        />\n        <ExchangeButton\n          disabled={!amountFrom || isNotEnough()}\n          onClick={() => setModal(true)}\n        />\n      </Grid>\n      <Modal\n        title=\"Confirm Exchange\"\n        start={modal}\n        onConfirm={onConfirm}\n        button=\"Ok\"\n        text={`Please confirm exchange\n            of ${amountFrom}${currencyFrom} \n            to ${amountTo}${currencyTo}`\n        }\n      />\n      <Modal\n        title=\"Error\"\n        start={error}\n        onConfirm={flag => flag && fetchLatestRates()}\n        button=\"Retry\"\n        text=\"Oops, something went wrong!\"\n      />\n    </Fragment> \n  )\n}","import React, {Component} from 'react';\nimport {setCurrency, exchange, setAmount, swapCurrencies, getLatestRates, toggleReverse} from '../actions';\nimport ExchangeScreen from './ExchangeScreen';\nimport {connect} from 'react-redux';\nimport {RATE} from '../config';\n\nclass Container extends Component {\n    tick = () => {\n        this.props.fetchLatestRates();\n    };\n\n    render() {\n        return <ExchangeScreen {...this.props} />;\n    }\n\n    componentDidMount() {\n        this.props.fetchLatestRates();\n        this.timer = setInterval(this.tick, RATE)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer)\n    }\n}\n\nconst mapStateToProps = state => ({...state});\n\nconst mapDispatchToProps = dispatch => ({\n    onCurrencyChange: (e, second) => {\n        dispatch(setCurrency(e.target.value, second));\n    },\n    onChangeAmount: val => {\n        dispatch(setAmount(val));\n    },\n    swapCurrencies: () => {\n        dispatch(swapCurrencies());\n    },\n    onExchange: () => {\n        dispatch(exchange());\n    },\n    fetchLatestRates: () => {\n        dispatch(getLatestRates());\n    },\n    toggleFocus: reverse => {\n        dispatch(toggleReverse(reverse));\n    }\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Container);","export const API = 'https://openexchangerates.org/api/latest.json?app_id=160050003baf43aaac35c80b3cf145a0';\nexport const RATE = 10000;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport HOC from './components/Container';\n\nfunction Copyright() {\n  return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n  );\n}\n\nexport default function () {\n  return (\n      <Container maxWidth=\"sm\">\n        <Box my={4}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              Exchallenge\n          </Typography>\n          <HOC />\n          <Copyright />\n        </Box>\n      </Container>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <ThemeProvider theme={theme}>\n            {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n            <CssBaseline />\n            <App />\n        </ThemeProvider>\n    </Provider>,\n    document.querySelector('#root'),\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","import {createStore, applyMiddleware, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport pockets from './reducers/pockets';\nimport display from './reducers/display';\nimport rates from './reducers/rates';\nimport {actionTypes} from './actions';\n\nexport default function() {\n  return createStore(\n    combineReducers({\n      pockets,\n      display,\n      rates,\n      error(state = false, action) {\n          return action.type === actionTypes.FETCH_RATES_FAIL;\n      }\n    }),\n    applyMiddleware(thunk)\n  );\n}\n\n"],"sourceRoot":""}